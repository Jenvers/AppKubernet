# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: 
         name: "Deploy Aplicacion 1"
         command: |
         cd./aplicacion1
         yarn install
      - run: 
         name: "Deploy Aplicacion 2"
         command: |
         cd./aplicacion2
         yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  test:
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: 
         name: "Deploy Aplicacion 1"
         command: |
         cd./aplicacion1
         yarn run test
      - run: 
         name: "Deploy Aplicacion 2"
         command: |
         cd./aplicacion2
         yarn run test
  deployDevelopment:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - add_ssh_keys:
          fingerprints:
            - ""
      - run: 
         name: "Deploy Aplicacion 1"
         command: |
         cd./aplicacion1
         yarn run build
         ssh -o StrictHostKeyChecking=no ubuntu@18.207.165.124 "mkdir -p App1"
         scp -o StrictHostKeyChecking=no -r ./build/* ubuntu@18.207.165.124:~/App1
      -run: 
         name: "Deploy Aplicacion 2"
         command: |
         cd./aplicacion2
         yarn run build
         ssh -o StrictHostKeyChecking=no ubuntu@18.207.165.124 "mkdir -p App2"
         scp -o StrictHostKeyChecking=no -r ./build/* ubuntu@18.207.165.124:~/App2
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  productionDeploy:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - add_ssh_keys:
          fingerprints:
            - ""
      - run: 
         name: "Deploy Aplicacion 1"
         command: |
         cd./aplicacion1
         yarn run build
         ssh -o StrictHostKeyChecking=no ubuntu@34.200.238.150 "mkdir -p App1"
         scp -o StrictHostKeyChecking=no -r ./build/* ubuntu@34.200.238.150:~/App1
      -run: 
         name: "Deploy Aplicacion 2"
         command: |
         cd./aplicacion2
         yarn run build
         ssh -o StrictHostKeyChecking=no ubuntu@34.200.238.150 "mkdir -p App2"
         scp -o StrictHostKeyChecking=no -r ./build/* ubuntu@34.200.238.150:~/App2
      
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

 
    


workflows:
  version: 2
  normal_run:
    jobs:
      - build: 
          filters:
            branches:
              only:
                - master
      - test:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deployDevelopment:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - master
      - request-testing:
          type: approval
          requires:
            - deployDevelopment
            - test
      - productionDeploy:
          requires:
            - request-testing
          filters:
            branches:
              only:
                - master  